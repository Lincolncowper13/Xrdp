name: Setup RDP on Linux Runner with LocalTunnel (Persistent with Logs)

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: ubuntu-latest

    steps:
    - name: Update and Install XRDP
      run: |
        sudo apt-get update
        sudo apt-get install -y xrdp xfce4 xfce4-terminal
        sudo systemctl enable xrdp
        echo xfce4-session > ~/.xsession
        sudo systemctl restart xrdp

    - name: Set Username and Generate Random Password
      run: |
        # Set username and generate random password
        USERNAME="runner"
        PASSWORD=$(openssl rand -base64 12)
        echo "$USERNAME:$PASSWORD" | sudo chpasswd

        # Log credentials to a file
        echo "Username: $USERNAME" > rdp-credentials.txt
        echo "Password: $PASSWORD" >> rdp-credentials.txt

    - name: Install Node.js and LocalTunnel
      run: |
        curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        sudo apt-get install -y nodejs
        sudo npm install -g localtunnel

    - name: Start LocalTunnel for RDP and Get Tunnel Password
      run: |
        # Start LocalTunnel in the background
        lt --port 3389 --subdomain rdp-access > lt-url.txt &
        sleep 5

        # Retrieve the LocalTunnel IP-based password
        TUNNEL_PASSWORD=$(curl -s https://loca.lt/mytunnelpassword)

        # Log credentials and tunnel details
        echo "=== RDP Credentials ===" >> rdp-credentials.txt
        echo "Tunnel Password: $TUNNEL_PASSWORD" >> rdp-credentials.txt
        echo "LocalTunnel URL:" >> rdp-credentials.txt
        cat lt-url.txt >> rdp-credentials.txt

    - name: Display Initial Credentials and Start Periodic Logging
      run: |
        echo "=== RDP Login Details ==="
        cat rdp-credentials.txt

        # Log the details every 5 minutes
        for i in {1..5}
        do
          echo "HenCoders Active - Log #$i"
          cat rdp-credentials.txt
          sleep 300  # Wait for 5 minutes before printing again
        done

    - name: Keep Workflow Running
      run: |
        # Prevent the workflow from completing
        tail -f /dev/null
